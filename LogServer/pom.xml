<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.isis.logserver</groupId>
  <artifactId>IocLogServer</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>IocLogServer</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
		<version>3.0</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      
      <!-- 
      		Create a jar file and package the dependencies 
      		(libraries: joda-time, activemq, mysql) with it.
      		Build with the command 'mvn package assembly:single'.
       -->
	  <plugin>
		<artifactId>maven-assembly-plugin</artifactId>
		<configuration>
		  <archive>
			<manifest>
			  <mainClass>org.isis.logserver.server.IOCLogServer</mainClass>
			</manifest>
		  </archive>
		  <descriptorRefs>
			<descriptorRef>jar-with-dependencies</descriptorRef>
		  </descriptorRefs>
		  <appendAssemblyId>false</appendAssemblyId>
		</configuration>
	  </plugin>
	  
	  <!-- 
	  		Make source file jar
	   -->
	  <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-source-plugin</artifactId>
		<version>2.3</version>
		<executions>
		  <execution>
		    <id>attach-sources</id>
		    <goals>
		      <goal>jar</goal>
		    </goals>
		  </execution>
		</executions>
	  </plugin>
		
	  <!-- 
	  		Make javadoc jar
	   -->
	  <plugin>
  		<groupId>org.apache.maven.plugins</groupId>
  		<artifactId>maven-javadoc-plugin</artifactId>
  		<version>2.9.1</version>
  		<executions>
    	  <execution>
      		<id>attach-javadocs</id>
      		<goals>
        	  <goal>jar</goal>
      		</goals>
    	  </execution>
  		</executions>
	  </plugin>
	  
	  <!-- 
	  		Run FindBugs checks as part of the verify phase
	  		(run with the command 'mvn verify').
	   -->
	   <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <version>2.5.2</version>
            <configuration>
                <!--
                    Enables analysis which takes more memory but finds more bugs.
                    If you run out of memory, changes the value of the effort element
                    to 'Low'.
                -->
                <effort>Max</effort>
                <!-- Build doesn't fail if problems are found -->
                <failOnError>false</failOnError>
                <!-- Reports all bugs (other values are medium and max) -->
                <threshold>Low</threshold>
                <!-- Produces XML report -->
                <xmlOutput>true</xmlOutput>
                <!-- Configures the directory in which the XML report is created -->
                <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
            </configuration>
            <executions>
                <!-- Ensures that FindBugs inspects source code when project is compiled.-->
                <execution>
                    <id>analyze-compile</id>
                    <phase>verify</phase>
                    <goals>
                        <goal>check</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
		
	   <!-- 
	  		Run PMD checks as part of the verify phase
	  		(run with the command 'mvn verify').
	   -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-pmd-plugin</artifactId>
			<version>3.2</version>
			<executions>
          		<execution>
            		<phase>verify</phase> 
            		<goals>
              			<goal>check</goal> 
            		</goals>
          		</execution>
        	</executions>
			<configuration>
			  <failOnViolation>false</failOnViolation>
	          <linkXref>true</linkXref>
	          <verbose>true</verbose>
	          <sourceEncoding>utf-8</sourceEncoding>
	          <minimumTokens>100</minimumTokens>
	          <targetJdk>1.7</targetJdk>
	        </configuration>
		</plugin>
		
		<!--
        	Run CheckStyle checks as part of the build.  
        -->
        <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-checkstyle-plugin</artifactId>
	      <version>2.12.1</version>
	      <executions>
            <execution>
              <phase>verify</phase> 
                <goals>
              	  <goal>check</goal> 
                </goals>
          	</execution>
          </executions>
          <configuration>
            <configLocation>src/main/config/checkstyle.xml</configLocation>
            <failOnViolation>false</failOnViolation>
            <failsOnError>false</failsOnError>
          	<linkXRef>true</linkXRef>
          </configuration>
      	</plugin>
	  
    </plugins>
  </build>
  
  

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
	<dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.4</version>
      <scope>compile</scope>
    </dependency>
	<dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-all</artifactId>
      <version>5.4.2</version>
      <scope>compile</scope>
    </dependency>
	<dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.32</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
</project>
